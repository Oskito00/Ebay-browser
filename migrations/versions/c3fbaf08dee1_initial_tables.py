"""Initial tables

Revision ID: c3fbaf08dee1
Revises: 
Create Date: 2025-03-08 09:22:44.496659

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c3fbaf08dee1'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('long_term_items',
    sa.Column('recorded_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('keywords', sa.String(length=255), nullable=True),
    sa.Column('ebay_id', sa.String(length=50), nullable=False),
    sa.Column('legacy_id', sa.String(length=50), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('currency', sa.String(length=10), nullable=True),
    sa.Column('url', sa.String(length=512), nullable=True),
    sa.Column('image_url', sa.String(length=255), nullable=True),
    sa.Column('seller', sa.String(length=100), nullable=True),
    sa.Column('seller_rating', sa.String(length=20), nullable=True),
    sa.Column('condition', sa.String(length=50), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('location_country', sa.String(length=10), nullable=True),
    sa.Column('postal_code', sa.String(length=20), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('buying_options', sa.Text(), nullable=True),
    sa.Column('auction_details', sa.Text(), nullable=True),
    sa.Column('categories', sa.Text(), nullable=True),
    sa.Column('marketplace', sa.String(length=20), nullable=True),
    sa.Column('images', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ebay_id', 'keywords', 'recorded_at', name='uq_ebay_keywords_time')
    )
    with op.batch_alter_table('long_term_items', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_long_term_items_keywords'), ['keywords'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=True),
    sa.Column('telegram_chat_ids', sa.JSON(), nullable=True),
    sa.Column('telegram_connected', sa.Boolean(), nullable=True),
    sa.Column('telegram_notifications_enabled', sa.Boolean(), nullable=True),
    sa.Column('notification_preferences', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('query_usage', sa.Integer(), nullable=True),
    sa.Column('stripe_customer_id', sa.String(length=50), nullable=True),
    sa.Column('stripe_subscription_id', sa.String(length=50), nullable=True),
    sa.Column('tier', sa.JSON(), nullable=True),
    sa.Column('subscription_status', sa.String(length=20), nullable=True),
    sa.Column('current_period_end', sa.DateTime(), nullable=True),
    sa.Column('requested_change', sa.JSON(), nullable=True),
    sa.Column('pending_tier', sa.JSON(), nullable=True),
    sa.Column('pending_effective_date', sa.DateTime(), nullable=True),
    sa.Column('cancellation_requested', sa.Boolean(), nullable=True),
    sa.Column('last_checkout_session_id', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_stripe_customer_id'), ['stripe_customer_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_stripe_subscription_id'), ['stripe_subscription_id'], unique=False)

    op.create_table('queries',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('keywords', sa.String(length=255), nullable=False),
    sa.Column('check_interval', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('min_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('max_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('required_keywords', sa.String(length=255), nullable=True),
    sa.Column('excluded_keywords', sa.String(length=255), nullable=True),
    sa.Column('condition', sa.String(length=50), nullable=True),
    sa.Column('buying_options', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('filters', sa.JSON(), nullable=True),
    sa.Column('last_checked', sa.DateTime(), nullable=True),
    sa.Column('limit', sa.Integer(), nullable=True),
    sa.Column('total_items', sa.Integer(), nullable=True),
    sa.Column('price_alert_threshold', sa.Float(), nullable=True),
    sa.Column('marketplace', sa.String(length=10), nullable=False),
    sa.Column('item_location', sa.String(length=10), nullable=False),
    sa.Column('last_full_run', sa.DateTime(timezone=True), nullable=True),
    sa.Column('next_full_run', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_recent_run', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('needs_scheduling', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('queries', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_queries_needs_scheduling'), ['needs_scheduling'], unique=False)

    op.create_table('items',
    sa.Column('query_id', sa.Integer(), nullable=True),
    sa.Column('auction_ending_notification_sent', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('keywords', sa.String(length=255), nullable=True),
    sa.Column('ebay_id', sa.String(length=50), nullable=False),
    sa.Column('legacy_id', sa.String(length=50), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('currency', sa.String(length=10), nullable=True),
    sa.Column('url', sa.String(length=512), nullable=True),
    sa.Column('image_url', sa.String(length=255), nullable=True),
    sa.Column('seller', sa.String(length=100), nullable=True),
    sa.Column('seller_rating', sa.String(length=20), nullable=True),
    sa.Column('condition', sa.String(length=50), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('location_country', sa.String(length=10), nullable=True),
    sa.Column('postal_code', sa.String(length=20), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('buying_options', sa.Text(), nullable=True),
    sa.Column('auction_details', sa.Text(), nullable=True),
    sa.Column('categories', sa.Text(), nullable=True),
    sa.Column('marketplace', sa.String(length=20), nullable=True),
    sa.Column('images', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['query_id'], ['queries.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ebay_id', 'query_id', name='uq_ebay_id_query')
    )
    with op.batch_alter_table('items', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_items_keywords'), ['keywords'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('items', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_items_keywords'))

    op.drop_table('items')
    with op.batch_alter_table('queries', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_queries_needs_scheduling'))

    op.drop_table('queries')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_stripe_subscription_id'))
        batch_op.drop_index(batch_op.f('ix_users_stripe_customer_id'))

    op.drop_table('users')
    with op.batch_alter_table('long_term_items', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_long_term_items_keywords'))

    op.drop_table('long_term_items')
    # ### end Alembic commands ###
