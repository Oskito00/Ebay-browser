"""Initial migration after schema change

Revision ID: aae74aa5a0ac
Revises: 
Create Date: 2025-03-12 20:01:29.357403

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'aae74aa5a0ac'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('items',
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('ebay_id', sa.String(length=50), nullable=False),
    sa.Column('legacy_id', sa.String(length=50), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('currency', sa.String(length=10), nullable=True),
    sa.Column('url', sa.String(length=512), nullable=True),
    sa.Column('image_url', sa.String(length=255), nullable=True),
    sa.Column('seller', sa.String(length=100), nullable=True),
    sa.Column('seller_rating', sa.String(length=20), nullable=True),
    sa.Column('condition', sa.String(length=50), nullable=True),
    sa.Column('location_country', sa.String(length=10), nullable=True),
    sa.Column('postal_code', sa.String(length=20), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('buying_options', sa.Text(), nullable=True),
    sa.Column('auction_details', sa.Text(), nullable=True),
    sa.Column('categories', sa.Text(), nullable=True),
    sa.Column('marketplace', sa.String(length=20), nullable=True),
    sa.Column('images', sa.Text(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('item_id'),
    sa.UniqueConstraint('ebay_id')
    )
    op.create_table('keywords',
    sa.Column('keyword_id', sa.Integer(), nullable=False),
    sa.Column('keyword_text', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('keyword_id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=True),
    sa.Column('telegram_chat_ids', sa.JSON(), nullable=True),
    sa.Column('telegram_connected', sa.Boolean(), nullable=True),
    sa.Column('telegram_notifications_enabled', sa.Boolean(), nullable=True),
    sa.Column('notification_preferences', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('query_usage', sa.Integer(), nullable=True),
    sa.Column('stripe_customer_id', sa.String(length=50), nullable=True),
    sa.Column('stripe_subscription_id', sa.String(length=50), nullable=True),
    sa.Column('tier', sa.JSON(), nullable=True),
    sa.Column('subscription_status', sa.String(length=20), nullable=True),
    sa.Column('current_period_end', sa.DateTime(), nullable=True),
    sa.Column('requested_change', sa.JSON(), nullable=True),
    sa.Column('pending_tier', sa.JSON(), nullable=True),
    sa.Column('pending_effective_date', sa.DateTime(), nullable=True),
    sa.Column('cancellation_requested', sa.Boolean(), nullable=True),
    sa.Column('last_checkout_session_id', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_stripe_customer_id'), ['stripe_customer_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_stripe_subscription_id'), ['stripe_subscription_id'], unique=False)

    op.create_table('feedback',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('feedback_type', sa.String(length=255), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('cancellation_reasons', sa.String(length=255), nullable=True),
    sa.Column('cancellation_comment', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('item_relevance_feedback',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('keyword_id', sa.Integer(), nullable=False),
    sa.Column('is_relevant', sa.Boolean(), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('feedback_source', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['items.item_id'], ),
    sa.ForeignKeyConstraint(['keyword_id'], ['keywords.keyword_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('keyword_items',
    sa.Column('keyword_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('found_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['items.item_id'], ),
    sa.ForeignKeyConstraint(['keyword_id'], ['keywords.keyword_id'], ),
    sa.PrimaryKeyConstraint('keyword_id', 'item_id')
    )
    op.create_table('user_queries',
    sa.Column('query_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('keyword_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('check_interval', sa.Integer(), nullable=True),
    sa.Column('marketplace', sa.String(length=10), nullable=True),
    sa.Column('item_location', sa.String(length=50), nullable=True),
    sa.Column('last_full_run', sa.DateTime(), nullable=True),
    sa.Column('next_full_run', sa.DateTime(), nullable=True),
    sa.Column('last_recent_run', sa.DateTime(), nullable=True),
    sa.Column('min_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('max_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('condition', sa.String(length=50), nullable=True),
    sa.Column('required_keywords', sa.String(length=255), nullable=True),
    sa.Column('excluded_keywords', sa.String(length=255), nullable=True),
    sa.Column('buying_options', sa.String(length=255), nullable=True),
    sa.Column('first_run', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['keyword_id'], ['keywords.keyword_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('query_id')
    )
    with op.batch_alter_table('user_queries', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_queries_buying_options'), ['buying_options'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_queries_condition'), ['condition'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_queries_excluded_keywords'), ['excluded_keywords'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_queries_item_location'), ['item_location'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_queries_max_price'), ['max_price'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_queries_min_price'), ['min_price'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_queries_required_keywords'), ['required_keywords'], unique=False)

    op.create_table('user_query_items',
    sa.Column('query_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('auction_ending_notification_sent', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['items.item_id'], ),
    sa.ForeignKeyConstraint(['query_id'], ['user_queries.query_id'], ),
    sa.PrimaryKeyConstraint('query_id', 'item_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_query_items')
    with op.batch_alter_table('user_queries', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_queries_required_keywords'))
        batch_op.drop_index(batch_op.f('ix_user_queries_min_price'))
        batch_op.drop_index(batch_op.f('ix_user_queries_max_price'))
        batch_op.drop_index(batch_op.f('ix_user_queries_item_location'))
        batch_op.drop_index(batch_op.f('ix_user_queries_excluded_keywords'))
        batch_op.drop_index(batch_op.f('ix_user_queries_condition'))
        batch_op.drop_index(batch_op.f('ix_user_queries_buying_options'))

    op.drop_table('user_queries')
    op.drop_table('keyword_items')
    op.drop_table('item_relevance_feedback')
    op.drop_table('feedback')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_stripe_subscription_id'))
        batch_op.drop_index(batch_op.f('ix_users_stripe_customer_id'))

    op.drop_table('users')
    op.drop_table('keywords')
    op.drop_table('items')
    # ### end Alembic commands ###
