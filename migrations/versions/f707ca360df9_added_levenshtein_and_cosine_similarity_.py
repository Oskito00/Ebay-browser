"""added levenshtein and cosine_similarity confidence

Revision ID: f707ca360df9
Revises: f114a23b3f57
Create Date: 2025-03-13 12:30:37.229728

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f707ca360df9'
down_revision = 'f114a23b3f57'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('apscheduler_jobs', schema=None) as batch_op:
        batch_op.drop_index('ix_apscheduler_jobs_next_run_time')

    op.drop_table('apscheduler_jobs')
    with op.batch_alter_table('item_relevance_feedback', schema=None) as batch_op:
        batch_op.add_column(sa.Column('simple_hybrid_levenshtein_confidence', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('cosine_similarity', sa.Float(), nullable=True))
        batch_op.drop_column('feedback_source')
        batch_op.drop_column('confidence')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('item_relevance_feedback', schema=None) as batch_op:
        batch_op.add_column(sa.Column('confidence', sa.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('feedback_source', sa.VARCHAR(length=50), nullable=True))
        batch_op.drop_column('cosine_similarity')
        batch_op.drop_column('simple_hybrid_levenshtein_confidence')

    op.create_table('apscheduler_jobs',
    sa.Column('id', sa.VARCHAR(length=191), nullable=False),
    sa.Column('next_run_time', sa.FLOAT(), nullable=True),
    sa.Column('job_state', sa.BLOB(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('apscheduler_jobs', schema=None) as batch_op:
        batch_op.create_index('ix_apscheduler_jobs_next_run_time', ['next_run_time'], unique=False)

    # ### end Alembic commands ###
